
# 本文件为样例文件，歌曲名为菊次郎的夏天
# 井号开头的行表示注释，不会被解析
# 该文件必须是 UTF-8 或 ASCII 编码

1 = D
# 设置调性，与标准简谱相同，这样设置之后，数字1234567分别代表 Ab Bb C Db Eb F G

C = D
# 设置和弦的调性，为了作曲方便，这样设置之后，C 和弦会被转义成 Ab 和弦，
# 也就是在谱中用 C 和弦就相当于 Ab 的 I 级和弦，方便作曲！
# 当然你也可以不设置，保持原有的符号。

beat = 4/4
# 默认 4/4拍，这个参数可以在中间每个小节设置一次，如果不设置，则自动和前面的一样

bpm = 90
# 每分钟节拍数，默认为 120 ，必须大于零，只能全局，暂不支持给每个小节设置



texture:t {
    @ = 0
    0 = (1(300040003000)__).._
    1 = (1(300040003000)__)._
}
texture:a {
    4 = [1234]._0_
    f = [1234].._0_
    8 = [1234].__0__
    j = [1234]..__0__
    3 = [123]._0_
    s = [123].*_
    l = [123].__0__
    S = [123]..*_
    L = [123]..__0__
}
texture:m {
    6 = [!.!].*_
    8 = [!.!]._
    e = [!.!]..*_
    w = [!.!].._
    M = [!.!]..---
}
texture:b {
    3 = (13).._
    4 = (14).._
    5 = (15).._
    f = (23)._
    G = (15)..._
    W = (23).._
}
texture:f {
    y = [!.!]..
    0 = [123].
    1 = [234].
    2 = [345].
    f = [1234].
    a = [123]..
    b = [234]..
    c = [345]..
}
# 这是自定义和弦织体
# 定义了隔三空 nnn 的经典织体
#    texture 是关键字，固定不变
#    t 是织体名称
#        织体名称由多个字符构成，必须为字母数字下划线构成，区分大小写，不允许数字开头。
#    可以设置多个织体，每个织体必须设置为不同的织体名称，格式和这个一样
#
#    内容为：
#    等号左边的为标识符
#        数字和字母会被解析为右边内容（区分大小写，一共10+26+26=62，够用了吧）
#        @ 代表代表默认织体内容，当第二个参数省略时会用到。
#    等号右边为和弦解析内容，1代表和弦的第一个音，2代表第二个音，以此类推。
#        如在C和弦中，三个音是CEG，则1代表C，2代表E，3代表G，4代表高音C，以此类推。
#        0表示休止符，如果超过9，则用小写字母和大写字母接着，如a代表第10个音，A代表第36个音
#        感叹号代表重音，默认是根音，通过设置分割和弦来实现，如 F/C 表示重音为 C
#
#    设置好自定义织体之后，即可像函数一样使用
#        格式为
#            织体名(和弦名[,转义标识组][,-减法单位数][,+转位数])
#                第二个参数和第三个参数是可选参数，并且可以互换位置
#                减法单位数：前面加负号，表示最终结果从后往前减去这么多音符。
#			   转位数：前面加正号，表示和弦的第几转位，默认零表示不转位。
#        如：和弦为 C 的 s(C,0242) 会先展开为 (13)._(41)._(51)._(41)._ ，
#            进而解析成 (15)._(1`5)._(3`5)._(1`5)._ ，
#            等价于 (1. 5. 1  5. 3  5. 1  5.)_ ，这是经典的隔三空二四二。
#
#    另外，支持减法法则
#        如： s(C,0242,-3) 表示减3个8分音符，最终会被解析成， (1. 5. 1  5. 3)_
#        如： s(F,-1) 表示默认织体减1个8分音符，最终会被解析成， (4. 1  4  1  4  1  4)_
#        如： s(C,0424,-1,+1) 表示C和弦的第一转位，减1个8分音符，最终会被解析成， (3. 1  5  1  3  1  5)_
#        如： s(C/D,0222) 表示重音为D的C大和弦，最终会被解析成， (2. 5. 1  5. 1  5. 1  5.)_
#
#    和弦的织体未被填满时，会自动补充休止符。
#
#




# 接下来是正文
#    ` 表示升高八度
#    . 表示降低八度
#    # 表示升音
#    b 表示降音
#        注意升降号和简谱里的升降号的作用不一样的，升降号仅对升降多的音符生效
#        所以不必还原，而且一个音符可以升降多次。
#    _ 表示八分音符
#    __ 表示十六分音符
#    ___ 表示三十二分音符
#    - 表示延音
#    * 表示附点
#    ^ 表示连音，如果后面那个音符和这个音符音调不同则无效。
#  以上几个符号均加在音符后面
#    () 表示整体，后面的音高符号和n分音符符号会分配给前面每个音符
#    [] 表示叠加，中括号里面每个音符都会同时按下，最终时值会以最长的音符决定
#       如有特殊需求，请分成多个声部
#       注意：中括号里面不允许出现 _ - * ^ 这些改变时值的符号，也不允许出现()和[]，也不允许出现休止符0
#     $ 连音符号，前面必须是括号，该符号会把括号内所有的时值除以括号内音符的个数
#       例如一小节四拍的 4 4 (333)$ 4 ，三个3一共占一个四分音符的时值，相当于三连音
#       当然 (33333)$ 相当于五连音，以此类推，你可以无数连音
#       括号内所有音符的时值得一样，否则你会迷茫的。
#
#    每个小节必须符合乐理规则，即每个音符的时值之和必须为所设置的拍子
#    每行可以设置n个小节，小节之间要用 | 隔开
#    另起一行表示另一个声部，直到遇到 - 开头表示开启新一小节
#    
#    : 表示织体，织体会被自定义的规则转义，
#          如果没满一个小节会自动填充，超出会出错。
#
#    可以填充任意多的空格以便自定义对齐


  0       0      0      0    |  0       0      0      0
:t(Am)            t(F)       |t(G)         t(C,1)
-

  0       0      0      0    |  0     0    0   (5.123)`__
:t(Am)            t(F)       |t(G)         t(C,1)

# 第一遍
-
 ((21_1_)_ ^1 -  (5.123)__)` | ((21_2_)_ ^(2_33_)_ ^3 (5.123)__)` 
:t(Am)         t(F)          |t(G)            t(C,1)

-
 ((21_1_)_ ^1 -  (5.123)__)` | ((21_2_)_ ^(2_53_)_ ^3 ([33.][44.])_)` 
:t(Am)         t(F)          |t(G)            t(C,1)

-
 ([572`5`][572`5`]_[572`5`]_^[572`5`][572`5`] [65`][63`]_[61`]_^[61`]3_`4_`)_
: t(G)                                        t(F)

-
 ([575`]  [575`]_  [575`]_  ^[575`]  [575`]   [55`][53`]_[51`]_^[51`]1_`2_`)_
: t(Em)                                       t(Am)

-
 ([4#1`3`][4#1`3`]_[4#1`3`]_^[4#1`3`][4#1`3`] [61`3`][6`]([2`6`]3`2`)$ 1`)_
: t(D)                                       t(F)

-
 2`              ([462`][462`]_[462`]_[462`]7)_  (5.123)__` 
: t(G)                         t(G)

# 第二遍
-
 ((21_1_)_ ^1 -  (5.123)__)`  | ((21_2_)_ ^(2_33_)_ ^3 (5.123)__)` 
:t(Am)         t(F)           | t(G)            t(C,1)

-
 ((21_1_)_ ^1 -  (5.123)__)`  | ((21_2_)_ ^(2_53_)_ ^3 ([33.][44.])_)` 
:t(Am)         t(F)          |t(G)            t(C,1)

-
 ([572`5`][572`5`]_[572`5`]_^[572`5`][572`5`] [65`][63`]_[61`]_^[61`]3_`4_`)_
: t(G)                                        t(F)

-
 ([575`]  [575`]_  [575`]_  ^[575`]  [575`]   [55`][53`]_[51`]_^[51`]1_`2_`)_
: t(Em)                                       t(Am)

-
 ([4#1`3`][4#1`3`]_[4#1`3`]_^[4#1`3`][4#1`3`])_  [473`]  (([2`6`]3`2`)$ 1`_6_)_
: t(D)                                           t(G,-12)


# 新段落
-
  1`   [1`2]_ 5_   3    -        |  [6.1.3]   [6.1]_3_   [6.7.2]   -
: t(C)            t(Am)          |  t(F)                 t(G)

-
  [35] [35]_(21)__ [35] [35]_(21)__ | [35] [35]_(21)__ [7.2]   -
: t(C)            t(Am)            |  t(F)              t(G)

-
  (55.12 5215. 55.12 5215.)__`  | (55.12 5215. 55.12 5215.)__`
: a(C,44)     a(G7sus4, ff, +2) | a(C,33,+1)a(G7sus4,S,+3)a(C,s,+1)a(Csus2,l,+1)

-
  (55.12 5215. 55.12 5215.)__`  | (55.12 5215. 55.12 5215.)__`
: a(C,8888)  a(G7sus4,jjjj, +2) | a(C,llll,+1)a(G7sus4,S,+3)a(C,s,+1)a(Csus2,l,+1)


-
1 = G
C = G
  (55.12 5215. 55.12 5215.)__`  | (55.12 5215. 55.12 5215.)__`
: a(C,44)     a(G7sus4, ff, +2) | a(C,33,+1)a(G7sus4,S,+3)a(C,s,+1)a(Csus2,l,+1)

-
  (55.12 5215. 55.12 5215.)__`  | (55.12 5215. 55.12 5215.)__`
: a(C,8888)  a(G7sus4,jjjj, +2) | a(C,llll,+1)a(G7sus4,S,+3)a(C,s,+1)a(Csus2,l,+1)

-
1 = D
C = D
  (55.12 5215. 55.12 5215.)__`  | (55.12 5215. 55.12 5215.)__`
: b(Cadd9, 4f) b(G7sus4, GW, +2)| b(C, 4f, +1)m(G7sus4/F,6)m(C/E,6)m(Csus2/D,8)

-
  (55.12 5215. 55.12 5215.)__`  | (55.12 5215. 55.12 5215.)__`
: b(Cadd9, 4f) b(G7sus4, GW, +2)| b(C, 4f, +1)m(G7sus4/F,6)m(C/E,6)m(Csus2/D,8)

# 强调
-
 ([572`5`][572`5`]_[572`5`]_^[572`5`][572`5`] [65`][63`]_[61`]_^[61`]3_`4_`)_
: f(G, yc)                                   f(F, y0) 

-
 ([575`]  [575`]_  [575`]_  ^[575`]  [575`]   [55`][53`]_[51`]_^[51`]1_`2_`)_
: f(Em7, yf)                                  f(Am, yc)

-
 ([4#1`3`][4#1`3`]_[4#1`3`]_^[4#1`3`][4#1`3`] [61`3`][6`]([2`6`]3`2`)$ 1`)_
: f(D7, y1)                                   f(F, y0)

-
 2`              ([462`][462`]_[462`]_[462`]7)_  (5.123)__` 
: f(G, y)f(Am, 1)                    f(G, y0)

# 结尾
-
 ((21_1_)_ ^1 -  (5.123)__)` | ((21_2_)_ ^(2_33_)_ ^3 (5.123)__)` 
:t(Am)         t(F)          |t(G)            t(C,1)

-
 ((21_1_)_ ^1 -  (5.123)__)` | ((21_2_)_ ^(2_53_)_ ^3 ([33.][44.])_)` 
:t(Am)         t(F)          |t(G)            t(C,1)

-
 ([572`5`][572`5`]_[572`5`]_^[572`5`][572`5`] [65`][63`]_[61`]_^[61`]3_`4_`)_
: t(G)                                        t(F)

-
 ([575`]  [575`]_  [575`]_  ^[575`]  [575`]   [55`][53`]_[51`]_^[51`]1_`2_`)_
: t(Em)                                       t(Am)

-
 ([4#1`3`][4#1`3`]_[4#1`3`]_^[4#1`3`][4#1`3`])_  [473`]  (([2`6`]3`2`)$ 1`_6_)_
: t(D)                                           t(G, -12)

# 尾声
-
 (1        [11`]    [7.7]*   [5.5]_)` |  [33`] [6.1]_[6.13]_[7.2] (5.123)`__
: t(C,1)              t(Am)           |  t(F)               t(G)

-
 ((21_1_)_ [11`]    [7.7]*   [5.5]_)` |[6.136]` (6.7.12 34)__2_ (5.123)`__
: t(C,1)            t(Am)             | t(F, -4)          t(G)

-
 ((21_1_)_ [11`]    [7.7]*   [5.5]_)` | [33`] [6.1]_[6.13]_[7.2] (5.123)`__
: t(C,1)            t(Am)             | t(F)               t(G)

-
  ((21_1_)_ ^ 1)`  ([146]*[15]*[14])_       | [5.23]   -   -   -
: t(C,1, -4)         m(F,e)m(C/E,e)m(Dm7,w) | m(Cadd9, M)

